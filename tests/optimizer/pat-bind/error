size = 1   Test.#1 = 1
size = 1   Test.#2 = 2
size = 1   Test.#20 = Test.#3:Test.#8
size = 2   Test.#21 = Data.List.map Test.#9 Test.#20
size = 1   Test.#3 = (Test.#1, Test.#2)
size = 1   Test.#4 = 3
size = 1   Test.#5 = 4
size = 1   Test.#6 = (Test.#4, Test.#5)
size = 1   Test.#7 = []
size = 1   Test.#8 = Test.#6:Test.#7
size = 4   Test.#9 = \#10 -> case #10 of {(#11, #12) -> let {#16 = Prelude:multiply #11 #11} in let {#17 = []} in #16:#17; _ -> []}
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#21
size = 1   Test.xys = Test.#3:Test.#8
size = 1   Test.y = 2
